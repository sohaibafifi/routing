project(solver_tests)
include_directories(../lib/googletest/googletest/include ../lib/googletest/googletest)
if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    set(CPLEX_STUDIO_DIR /Applications/CPLEX_Studio1210/)
    set(CPLEX_STUDIO_ARCH x86-64_osx)
else ()
    set(CPLEX_STUDIO_DIR /opt/ibm/ILOG/CPLEX_Studio1210)
    set(CPLEX_STUDIO_ARCH x86-64_linux)
endif ()


add_executable(VrpLSSolverTest VrpLSSolverTest.cpp)
target_include_directories(VrpLSSolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(VrpLSSolverTest PUBLIC ../../core/src/)
target_link_libraries(VrpLSSolverTest gtest gtest_main)
target_link_libraries(VrpLSSolverTest  utilities)
target_link_libraries(VrpLSSolverTest  vrp)
add_test(VrpLSSolverTest VrpLSSolverTest)


add_executable(VrpGASolverTest VrpGASolverTest.cpp)
target_include_directories(VrpGASolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(VrpGASolverTest PUBLIC ../../core/src/)
target_link_libraries(VrpGASolverTest gtest gtest_main)
target_link_libraries(VrpGASolverTest  utilities)
target_link_libraries(VrpGASolverTest  vrp)
add_test(VrpGASolverTest VrpGASolverTest)

add_executable(VrpMASolverTest VrpMASolverTest.cpp)
target_include_directories(VrpMASolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(VrpMASolverTest PUBLIC ../../core/src/)
target_link_libraries(VrpMASolverTest gtest gtest_main)
target_link_libraries(VrpMASolverTest  utilities)
target_link_libraries(VrpMASolverTest  vrp)
add_test(VrpMASolverTest VrpMASolverTest)

add_executable(VrpVNSSolverTest VrpVNSSolverTest.cpp)
target_include_directories(VrpVNSSolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(VrpVNSSolverTest PUBLIC ../../core/src/)
target_link_libraries(VrpVNSSolverTest gtest gtest_main)
target_link_libraries(VrpVNSSolverTest  utilities)
target_link_libraries(VrpVNSSolverTest  vrp)
add_test(VrpVNSSolverTest VrpVNSSolverTest)


add_executable(CvrpLSSolverTest CvrpLSSolverTest.cpp)
target_include_directories(CvrpLSSolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(CvrpLSSolverTest PUBLIC ../../problems/cvrp/src/)
target_include_directories(CvrpLSSolverTest PUBLIC ../../core/src/)
target_link_libraries(CvrpLSSolverTest gtest gtest_main)
target_link_libraries(CvrpLSSolverTest  utilities)
target_link_libraries(CvrpLSSolverTest  vrp)
target_link_libraries(CvrpLSSolverTest  cvrp)
add_test(CvrpLSSolverTest CvrpLSSolverTest)



add_executable(CvrpVNSSolverTest CvrpVNSSolverTest.cpp)
target_include_directories(CvrpVNSSolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(CvrpVNSSolverTest PUBLIC ../../problems/cvrp/src/)
target_include_directories(CvrpVNSSolverTest PUBLIC ../../core/src/)
target_link_libraries(CvrpVNSSolverTest gtest gtest_main)
target_link_libraries(CvrpVNSSolverTest  utilities)
target_link_libraries(CvrpVNSSolverTest  vrp)
target_link_libraries(CvrpVNSSolverTest  cvrp)
add_test(CvrpVNSSolverTest CvrpVNSSolverTest)



add_executable(CvrpGASolverTest CvrpGASolverTest.cpp)
target_include_directories(CvrpGASolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(CvrpGASolverTest PUBLIC ../../problems/cvrp/src/)
target_include_directories(CvrpGASolverTest PUBLIC ../../core/src/)
target_link_libraries(CvrpGASolverTest gtest gtest_main)
target_link_libraries(CvrpGASolverTest utilities)
target_link_libraries(CvrpGASolverTest vrp)
target_link_libraries(CvrpGASolverTest cvrp)
add_test(CvrpGASolverTest CvrpGASolverTest)


add_executable(CvrptwGASolverTest CvrptwGASolverTest.cpp)
target_include_directories(CvrptwGASolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(CvrptwGASolverTest PUBLIC ../../problems/cvrptw/src/)
target_include_directories(CvrptwGASolverTest PUBLIC ../../core/src/)
target_link_libraries(CvrptwGASolverTest gtest gtest_main)
target_link_libraries(CvrptwGASolverTest utilities)
target_link_libraries(CvrptwGASolverTest vrp)
target_link_libraries(CvrptwGASolverTest cvrp)
target_link_libraries(CvrptwGASolverTest cvrptw)
add_test(CvrptwGASolverTest CvrptwGASolverTest)


add_executable(CvrptwMIPSolverTest CvrptwMIPSolverTest.cpp)
target_include_directories(CvrptwMIPSolverTest PUBLIC ../../problems/vrp/src/)
target_include_directories(CvrptwMIPSolverTest PUBLIC ../../problems/cvrptw/src/)
target_include_directories(CvrptwMIPSolverTest PUBLIC ../../core/src/)
target_link_libraries(CvrptwMIPSolverTest gtest gtest_main)
target_link_libraries(CvrptwMIPSolverTest utilities)
target_link_libraries(CvrptwMIPSolverTest vrp)
target_link_libraries(CvrptwMIPSolverTest cvrp)
target_link_libraries(CvrptwMIPSolverTest cvrptw)
if (EXISTS "${CPLEX_STUDIO_DIR}/cplex/include/ilcplex/ilocplexi.h")
    target_compile_definitions(CvrptwMIPSolverTest PRIVATE IL_STD)
    target_compile_definitions(CvrptwMIPSolverTest PRIVATE CPLEX)
    target_link_libraries(CvrptwMIPSolverTest dl)
    target_link_libraries(CvrptwMIPSolverTest cp)
    target_link_libraries(CvrptwMIPSolverTest ilocplex)
    target_link_libraries(CvrptwMIPSolverTest cplex)
    target_link_libraries(CvrptwMIPSolverTest concert)
    target_link_libraries(CvrptwMIPSolverTest pthread)
endif ()
add_test(CvrptwMIPSolverTest CvrptwMIPSolverTest)